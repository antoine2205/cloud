@page
@model RailDelay.Pages.Stations.IndexModel
@{
    ViewData["Title"] = "List of stations";
}

<h1>Stations</h1>

<form method="get" asp-page="./Index">
    <div class="form-actions no-color">
        <p>
            Find by:
            <input type="text" name="searchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-outline-primary" />
            <a asp-page="./Index">Back to full list</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.IdSort">
                    @Html.DisplayNameFor(model => model.StationList[0].ID)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StationList[0].URL)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort">
                    @Html.DisplayNameFor(model => model.StationList[0].Name)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.StationList)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.URL)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    <a asp-page="./Details" asp-route-id="@item.ID">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    @if (Model.StationList.HasPreviousPage)
    {
        <a asp-page="./Index" asp-route-pageindex="@(Model.StationList.PageIndex-1)" asp-route-searchString="@Model.CurrentFilter"><<< </a>
    }
    else
    {
        <a asp-page="./Index" asp-route-pageindex="@(Model.StationList.PageIndex)" asp-route-searchString="@Model.CurrentFilter"><<< </a>
    }

    @Model.StationList.PageIndex

    @if(Model.StationList.HasNextPage)
    {
    <a asp-page="./Index" asp-route-pageindex="@(Model.StationList.PageIndex+1)" asp-route-searchString="@Model.CurrentFilter"> >>></a>
    }
    else
    {
    <a asp-page="./Index" asp-route-pageindex="@(Model.StationList.PageIndex)" asp-route-searchString="@Model.CurrentFilter"> >>></a>
    }
</div>
